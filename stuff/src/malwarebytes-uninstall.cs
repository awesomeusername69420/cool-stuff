/*
*   Uninstalls Malwarebytes without asking (Not counting UAC)
*/

using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Security.Principal;

namespace ConsoleApp1
{
    class Program
    {
        private static void GetProgramPaths(RegistryKey hive, List<string> keys, Dictionary<string, string> pOut) // Constructs a dictionary with [ProgramDisplayName] = ProgramInstallLocation
        {
            foreach (string key in keys)
            {
                using (RegistryKey hivemind = hive.OpenSubKey(key))
                {
                    if (hivemind == null) continue; // Sad

                    foreach (string name in hivemind.GetSubKeyNames())
                    {
                        using (RegistryKey subhive = hivemind.OpenSubKey(name))
                        {
                            try
                            {
                                string pName = (string)subhive.GetValue("DisplayName");
                                if (string.IsNullOrWhiteSpace(pName)) continue; // Skip retarded programs with retarded data

                                string uString = (string)subhive.GetValue("InstallLocation");
                                if (string.IsNullOrWhiteSpace(uString)) continue;

                                pOut[pName] = uString;
                            }
                            catch (Exception) { }
                        }
                    }
                }
            }
        }

        private static bool IsAdmin()
        {
            try
            {
                using (WindowsIdentity user = WindowsIdentity.GetCurrent())
                {
                    return new WindowsPrincipal(user).IsInRole(WindowsBuiltInRole.Administrator);
                }
            }
            catch (Exception) { }

            return false;
        }

        private static void PauseKill(string r)
        {
            Console.WriteLine(r + ". Press any key to exit.");
            Console.ReadKey();
            Environment.Exit(-1);
        }

        static void Main(string[] args)
        {
            if (!IsAdmin())
            {
                try
                {
                    ProcessStartInfo psi = new ProcessStartInfo();
                    psi.FileName = Assembly.GetExecutingAssembly().Location;
                    psi.UseShellExecute = true;
                    psi.Verb = "runas";

                    Process.Start(psi);

                    Environment.Exit(1);
                } catch (Exception)
                {
                    PauseKill("Admin is required");
                    return;
                }
            }

            Console.WriteLine("Getting installed programs...");

            List<string> keys = new List<string>() // Registry keys with program information according to Microsoft's guidelines
                {
                    "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall",
                    "SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall"
                };

            Dictionary<string, string> programs = new Dictionary<string, string>();

            GetProgramPaths(RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry64), keys, programs); // Get programs
            GetProgramPaths(RegistryKey.OpenBaseKey(RegistryHive.CurrentUser, RegistryView.Registry64), keys, programs);

            bool found = false;
            bool removed = false;

            Console.WriteLine("Searching for Malwarebytes...");

            foreach (KeyValuePair<string, string> program in programs)
            {
                if (program.Key.Contains("Malwarebytes"))
                {
                    if (File.Exists(program.Value + "\\mbuns.exe"))
                    {
                        Console.WriteLine("Malwarebytes found, attempting removal...");
                        found = true;

                        ProcessStartInfo psi = new ProcessStartInfo();
                        psi.FileName = program.Value + "\\mbuns.exe";
                        psi.Arguments = "/Uninstall /uselocalisvc MB /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /log=\"Mbam3x.log\"";
                        psi.WindowStyle = ProcessWindowStyle.Hidden;

                        try
                        {
                            Process p = Process.Start(psi);
                            p.WaitForExit();

                            removed = true;
                        }
                        catch (Exception) { }
                    }

                    break;
                }
            }

            if (found)
            {
                if (removed)
                    PauseKill("Malwarebytes successfully removed");
                else
                    PauseKill("Failed to remove Malwarebytes");
            } else
            {
                PauseKill("Failed to find Malwarebytes");
            }
        }
    }
}
